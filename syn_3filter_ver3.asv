
%sensitivity analysis for NSFsim

%1. Preliminaries
clear lgTau TrackingError EstEffort TrueEffort NonPareticAngle PareticAngle StdTe StdEE EffortCorr
SimTime=10;
TimeRange=[2 SimTime];
TimeRange2=[1 SimTime];
NumPoints=100;
Target=0.5;
TrackingError=zeros(1,NumPoints);
EstEffort=zeros(1,NumPoints);
TrueEffort=zeros(1,NumPoints);
NonPareticAngle=zeros(1,NumPoints);
PareticAngle=zeros(1,NumPoints);
StdTe=zeros(1,NumPoints);
StdEE=zeros(1,NumPoints);
EffortCorr=zeros(1,NumPoints);

mdlWks = get_param('NSFsim_syn','ModelWorkspace');
assignin(mdlWks,'rngseed',1000);

RepNum=10;
rng('default');
a=1000;
b=100;
rngseed=round(a+(b-a)*randn(1,10));
mdlWks = get_param('NSFsim_syn','ModelWorkspace');
%% pary hand
% 2. Variable: paretic hand opening time constant
   % vary Paretic hand

low=1;
high=4;
wc=logspace(log10(low),log10(high),NumPoints);


str1=sprintf('[%0.3f 1]',0.3);
set_param('NSFsim_syn/Paretic Hand/Stim Hand Angle/Transfer Fcn','Denominator',str1)
str1=sprintf('%0.2f',10);
set_param('NSFsim_syn/GainNP','Gain',str1)
str1=sprintf('%0.2f',20);
set_param('NSFsim_syn/Paretic Hand/Occlusion/Noise','Value',str1)
 
% low=0.0016;
% high=0.016;
% str1=sprintf('[%0.4f 1]',low);
% str2=sprintf('[%0.4f 1]',high);
% str3=sprintf('[%0.4f 0]',high);
% set_param('NSFsim_syn/Paretic Hand/vEMG/Transfer Fcn1','Denominator',str1)
% set_param('NSFsim_syn/Paretic Hand/vEMG/Transfer Fcn2','Denominator',str2)
% set_param('NSFsim_syn/Paretic Hand/vEMG/Transfer Fcn2','Numerator',str3)

for iRep=1:RepNum
    
    RepLabel=sprintf('Rep_%d',iRep);
%     assignin(mdlWks,'rngseed',rngseed(iRep));
    
    for FilterNum=1:3

    str1=sprintf('%d',FilterNum);
    FiltLabel=sprintf('Filt_%d',FilterNum);

    set_param('NSFsim_syn/Effort Estimator/FilterNum','Value',str1)

        for iwc=1:length(wc)

            str1=sprintf('%0.2f',wc(iwc));
            set_param('NSFsim_syn/GainP','Gain',str1)

            sim('NSFsim_syn',SimTime);

            tstep=ans.SimulationMetadata.ModelInfo.SolverInfo.FixedStepSize*100;
            S.(RepLabel).TrackingError(FilterNum,iwc)=mean(abs(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),1)));
            S.(RepLabel).StdTe(FilterNum,iwc)=std(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),1)-Target);
            S.(RepLabel).EstEffort(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2));
            S.(RepLabel).TrueEffort(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));
            S.(RepLabel).NonPareticAngle(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),4));
            S.(RepLabel).PareticAngle(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),5));
            S.(RepLabel).StdEE(FilterNum,iwc)=std(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2)...
                -ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));

            S.(RepLabel).EffortCorr(FilterNum,iwc)=corr2(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2),...
                ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));
            
            S.(RepLabel).(FiltLabel).TrackingError(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),1);
            S.(RepLabel).(FiltLabel).EstEffort(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),2);
            S.(RepLabel).(FiltLabel).TrueEffort(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),3);
        end
    end
end

str1=sprintf('%0.2f',2);
set_param('NSFsim_syn/GainP','Gain',str1)

save('syn_3filter2_PhandAllReps2')
%Outcome; 
% 1:TrackingError
% 2:EstEffort
% 3:RealEffort
% 4:nanparetic angle
% 5:Paretic angle
%%
Target=0.5;
clear O
O=struct;
O.TrackingError.data=TrackingError;
O.StdTe=StdTe;
O.EstEffort=EstEffort;
O.TrueEffort=TrueEffort;
O.NonPareticAngle=NonPareticAngle;
O.StdEE=StdEE;
O.EffortCorr.data=EffortCorr;
O.TrackingSNR.data=(StdTe/Target).^-1;
O.EstEffSNR.data=(EstEffort./StdEE);
O.wc=wc;

BaseLine=50;
Target=0.5;
fit_n=8;
ParamNumber=3;
ParamLabels={'TrackingError','TrackingSNR','EstEffSNR','EffortCorr'};
ParamTitles={'TrackingError','TrackingSNR',...
    'Estimated Effort SNR','Correlation: True vs Estimated Effort'};
xlabels={'Volitional Paretic Hand Opening Constant' };
ylabels={'Tracking Error (a.u.)','Tracking SNR',...
    'Estimtad Effort SNR','Pearson Correlation'};
FilterLabels={'Comb','GS','Blanking'};
LineLabels={'-','--','-.'};

for iParam=1:ParamNumber

    ParamLabel=ParamLabels{iParam};
    
    if iParam==4
        fit_n=0;
    end
    
    for FilterNum=1:3
        y(FilterNum,:)=O.(ParamLabel).data(FilterNum,:);
        x=O.wc.^-1;
        PercentChange(FilterNum,:)=-100+100*abs(y(FilterNum,:))/abs(y(1,BaseLine));
        FittedVal(FilterNum,:)=nPolyFit(x,y(FilterNum,:),fit_n);
        FittedPercent(FilterNum,:)=nPolyFit(x,PercentChange(FilterNum,:),fit_n);
    end
    
    figure(1)
    subplot(ParamNumber,2,iParam*2-1)
%     yyaxis left
    for FilterNum=1:3
%         p=semilogx(x,y(FilterNum,:),LineLabels{FilterNum},'LineWidth',1,'Color','k');
%        p.Color(4) = 0.5;
       pright(iParam,FilterNum)=semilogx(x,FittedVal(FilterNum,:),LineLabels{FilterNum},'LineWidth',2,'Color','k');
        hold on

    end
    
    a = get(gca,'Children');
    y1data = get(a, 'YData');
    y1min=min( [min(y1data{1}) min(y1data{2}) min(y1data{3}) ]);
    y1max=max( [max(y1data{1}) max(y1data{2}) max(y1data{3}) ]);
    scaledif=abs(y1max-y1min);
    ylim([y1min-scaledif*0.2 y1max+scaledif*0.2]);
    ylabel(ylabels{iParam});
    ax = gca;
    ax.YColor = 'k';
    
%     figure(1)
%     yyaxis right
%     nmin=1;
%     nmax=3;
% 
%     for FilterNum=nmin:nmax
%     %     semilogx(x,PercentChange(FilterNum,:),'-','LineWidth',2,'Color','k')
%         pleft(iParam,FilterNum)=semilogx(x,FittedPercent(FilterNum,:),LineLabels{FilterNum},'LineWidth',2,'Color','k');
%     end
%     
%     b = get(gca,'Children');
%     y2data = get(b, 'YData');
% 
%     y2min=min( [min(y2data{1}) min(y2data{2}) min(y2data{3}) ]);
%     y2max=max( [max(y2data{1}) max(y2data{2}) max(y2data{3}) ]);
%     scaledif=abs(y2max-y2min);
%     ylim([y2min-scaledif*0.2 y2max+scaledif*0.2]);
%     title(ParamTitles{iParam});
%     ax = gca;
%     ax.YColor = 'k';
%     
    if iParam==1
        legend(FilterLabels,'AutoUpdate','off');
    end
    
    for FilterNum=1:3
        plot(x(BaseLine),FittedVal(FilterNum,BaseLine),'*','Color','k')
    end
    
end



subplot(ParamNumber,2,5)
% yyaxis right
% lbl=ylabel('Change from Nominal Value (% change)');
% lbl.Position(2) = 50; 
xlabel('Volitional Paretic Hand Opening Constant')

% delete(pleft(4,1))

%% vary stim response 
low=0.3/2;
high=0.3*2;
wc=logspace(log10(low),log10(high),NumPoints);

% rng('shuffle');
% a=1000;
% b=100;
% rngseed=round(a+(b-a)*randn(1,100));
% mdlWks = get_param('NSFsim_syn','ModelWorkspace');

str1=sprintf('[%0.3f 1]',0.3);
set_param('NSFsim_syn/Paretic Hand/Stim Hand Angle/Transfer Fcn','Denominator',str1)
% str1=sprintf('%0.2f',10);
% set_param('NSFsim_syn/GainNP','Gain',str1)
str1=sprintf('%0.2f',2);
set_param('NSFsim_syn/GainP','Gain',str1)
% str1=sprintf('%0.10f',GainE_val_min(BaseLine));
% set_param('NSFsim_syn/GainE','Gain',str1)
str1=sprintf('%0.2f',20);
set_param('NSFsim_syn/Paretic Hand/Occlusion/Noise','Value',str1)

for iRep=1:RepNum
    
    RepLabel=sprintf('Rep_%d',iRep);
    assignin(mdlWks,'rngseed',rngseed(iRep));
    
    for FilterNum=1:3

    str1=sprintf('%d',FilterNum);
    FiltLabel=sprintf('Filt_%d',FilterNum);
    set_param('NSFsim_syn/Effort Estimator/FilterNum','Value',str1)

    for iwc=1:length(wc)

    %     assignin(mdlWks,'rngseed',rngseed(iwc));
        str1=sprintf('[%0.3f 1]',wc(iwc));
        set_param('NSFsim_syn/Paretic Hand/Stim Hand Angle/Transfer Fcn','Denominator',str1)

        sim('NSFsim_syn',SimTime);

        tstep=ans.SimulationMetadata.ModelInfo.SolverInfo.FixedStepSize*100;
        S.(RepLabel).TrackingError(FilterNum,iwc)=mean(abs(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),1)));
        S.(RepLabel).StdTe(FilterNum,iwc)=std(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),1)-Target);
        S.(RepLabel).EstEffort(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2));
        S.(RepLabel).TrueEffort(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));
        S.(RepLabel).NonPareticAngle(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),4));
        S.(RepLabel).PareticAngle(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),5));
        S.(RepLabel).StdEE(FilterNum,iwc)=std(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2)...
            -ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));

        S.(RepLabel).EffortCorr(FilterNum,iwc)=corr2(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2),...
            ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));

        S.(RepLabel).(FiltLabel).TrackingError(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),1);
        S.(RepLabel).(FiltLabel).EstEffort(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),2);
        S.(RepLabel).(FiltLabel).TrueEffort(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),3);


    end
    end
end
str1=sprintf('[%0.3f 1]',0.3);
set_param('NSFsim_syn/Paretic Hand/Stim Hand Angle/Transfer Fcn','Denominator',str1);
save('syn_3filter2_SHandAllReps')

%%
Target=0.5;
clear O
O=struct;
O.TrackingError.data=TrackingError;
O.StdTe=StdTe;
O.EstEffort=EstEffort;
O.TrueEffort=TrueEffort;
O.NonPareticAngle=NonPareticAngle;
O.StdEE=StdEE;
O.EffortCorr.data=EffortCorr;
O.TrackingSNR.data=(StdTe/Target).^-1;
O.EstEffSNR.data=(EstEffort./StdEE);
O.wc=wc;

BaseLine=50;
Target=0.5;
fit_n=10;

ParamLabels={'TrackingError','TrackingSNR','EstEffSNR','EffortCorr'};
ParamTitles={'TrackingError','TrackingSNR',...
    'Estimated Effort SNR','Correlation: True vs Estimated Effort'};
xlabels={'Volitional Paretic Hand Opening Constant' };
ylabels={'Tracking Error (a.u.)','Tracking SNR',...
    'Estimtad Effort SNR','Pearson Correlation'};
FilterLabels={'Comb','GS','Blanking'};
LineLabels={'-','--','-.'};

for iParam=1:3

    ParamLabel=ParamLabels{iParam};
    
%     if iParam==4
%         fit_n=1;
%     end
%     
    for FilterNum=1:3
        y(FilterNum,:)=O.(ParamLabel).data(FilterNum,:);
        x=O.wc;
        PercentChange(FilterNum,:)=-100+100*abs(y(FilterNum,:))/abs(y(1,BaseLine));
        FittedVal(FilterNum,:)=nPolyFit(x,y(FilterNum,:),fit_n);
        FittedPercent(FilterNum,:)=nPolyFit(x,PercentChange(FilterNum,:),fit_n);
    end
    
    figure(1)
    subplot(3,2,iParam*2)
%     yyaxis left
    for FilterNum=1:3
      p=semilogx(x,y(FilterNum,:),LineLabels{FilterNum},'LineWidth',2,'Color','k');
%       p.Color(4) = 0.5;
%         pright(iParam,FilterNum)=semilogx(x,FittedVal(FilterNum,:),LineLabels{FilterNum},'LineWidth',2,'Color','k');
        hold on
    end
    
    a = get(gca,'Children');
    y1data = get(a, 'YData');
    y1min=min( [min(y1data{1}) min(y1data{2}) min(y1data{3}) ]);
    y1max=max( [max(y1data{1}) max(y1data{2}) max(y1data{3}) ]);
    scaledif=abs(y1max-y1min);
    ylim([y1min-scaledif*0.2 y1max+scaledif*0.2]);
    ylabel(ylabels{iParam});
    ax = gca;
    ax.YColor = 'k';
    
%     figure(1)
%     yyaxis right
% 
%     for FilterNum=1:3
%     %     semilogx(x,PercentChange(FilterNum,:),'-','LineWidth',2,'Color','k')
%         pleft(iParam,FilterNum)=semilogx(x,FittedPercent(FilterNum,:),LineLabels{FilterNum},'LineWidth',2,'Color','k');
%     end
%     
%     b = get(gca,'Children');
%     y2data = get(b, 'YData');
% 
%     y2min=min( [min(y2data{1}) min(y2data{2}) min(y2data{3}) ]);
%     y2max=max( [max(y2data{1}) max(y2data{2}) max(y2data{3}) ]);
%     scaledif=abs(y2max-y2min);
%     ylim([y2min-scaledif*0.2 y2max+scaledif*0.2]);
%     title(ParamTitles{iParam});
%     ax = gca;
%     ax.YColor = 'k';
%     
    if iParam==1
        legend(FilterLabels,'AutoUpdate','off');
    end
    
    for FilterNum=1:3
        plot(x(BaseLine),FittedVal(FilterNum,BaseLine),'*','Color','k')
    end
    
    xlim([x(1) x(97)])
    
end

subplot(3,2,6)
% yyaxis right
% lbl=ylabel('Change from Nominal Value (% change)');
% lbl.Position(2) = 100; 
xlabel('Stimulated Paretic Hand Opening Constant')

% delete(pleft(4,2))
% delete(pleft(4,1))





%% Hand opening occlusion noise

low=20/4;
high=20*4;
% wc=linspace(low,high,NumPoints);
wc=logspace(log10(low),log10(high),NumPoints);

% rng('shuffle');
% a=1000;
% b=100;
% rngseed=round(a+(b-a)*randn(1,100));
% mdlWks = get_param('NSFsim_syn','ModelWorkspace');

str1=sprintf('%0.2f',0);
set_param('NSFsim_syn/Effort Estimator/Comb/Gain','Gain',str1)
% str1=sprintf('%0.2f',0);
% set_param('NSFsim_syn/Paretic Hand/mWave/GainVar','Gain',str1)
str1=sprintf('%0.2f',2);
set_param('NSFsim_syn/GainP','Gain',str1)
% str1=sprintf('%0.10f',GainE_val_min(BaseLine));
% set_param('NSFsim_syn/GainE','Gain',str1)
for iRep=1:RepNum
    
    RepLabel=sprintf('Rep_%d',iRep);
    assignin(mdlWks,'rngseed',rngseed(iRep));
    
    for FilterNum=1:3

        str1=sprintf('%d',FilterNum);
        FiltLabel=sprintf('Filt_%d',FilterNum);
        set_param('NSFsim_syn/Effort Estimator/FilterNum','Value',str1)

        for iwc=1:length(wc)

        %     assignin(mdlWks,'rngseed',rngseed(iwc));
            str1=sprintf('%0.2f',wc(iwc));
            set_param('NSFsim_syn/Paretic Hand/Occlusion/Noise','Value',str1)
            sim('NSFsim_syn',SimTime);


            tstep=ans.SimulationMetadata.ModelInfo.SolverInfo.FixedStepSize*100;
            S.(RepLabel).TrackingError(FilterNum,iwc)=mean(abs(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),1)));
            S.(RepLabel).StdTe(FilterNum,iwc)=std(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),1)-Target);
            S.(RepLabel).EstEffort(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2));
            S.(RepLabel).TrueEffort(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));
            S.(RepLabel).NonPareticAngle(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),4));
            S.(RepLabel).PareticAngle(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),5));
            S.(RepLabel).StdEE(FilterNum,iwc)=std(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2)...
                -ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));

            S.(RepLabel).EffortCorr(FilterNum,iwc)=corr2(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2),...
                ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));

            S.(RepLabel).(FiltLabel).TrackingError(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),1);
            S.(RepLabel).(FiltLabel).EstEffort(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),2);
            S.(RepLabel).(FiltLabel).TrueEffort(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),3);


        end

    end
end

str1=sprintf('%0.2f',20);
set_param('NSFsim_syn/Paretic Hand/Occlusion/Noise','Value',str1)
save('syn_3filter2_OccAllReps')

%%
Target=0.5;
clear O
O=struct;
O.TrackingError.data=TrackingError;
O.StdTe=StdTe;
O.EstEffort=EstEffort;
O.TrueEffort=TrueEffort;
O.NonPareticAngle=NonPareticAngle;
O.StdEE=StdEE;
O.EffortCorr.data=EffortCorr;
O.TrackingSNR.data=(StdTe/Target).^-1;
O.EstEffSNR.data=(EstEffort./StdEE);
O.wc=wc/100;

BaseLine=50;
Target=0.5;
fit_n=[ 4 4 4; 4 15 4; 2 2 2];

ParamLabels={'TrackingError','TrackingSNR','EstEffSNR','EffortCorr'};
ParamTitles={'TrackingError','TrackingSNR',...
    'Estimated Effort SNR','Correlation: True vs Estimated Effort'};
xlabels={'Volitional Paretic Hand Opening Constant' };
ylabels={'Tracking Error (a.u.)','Tracking SNR',...
    'Estimtad Effort SNR','Pearson Correlation'};
FilterLabels={'Comb','GS','Blanking'};
LineLabels={'-','--','-.'};

for iParam=1:3

    ParamLabel=ParamLabels{iParam};
    

    for FilterNum=1:3
        y(FilterNum,:)=O.(ParamLabel).data(FilterNum,:);
        x=O.wc;
        PercentChange(FilterNum,:)=-100+100*abs(y(FilterNum,:))/abs(y(1,BaseLine));
        FittedVal(FilterNum,:)=nPolyFit(x,y(FilterNum,:),fit_n(iParam,FilterNum ));
        FittedPercent(FilterNum,:)=nPolyFit(x,PercentChange(FilterNum,:),fit_n(iParam,FilterNum ));
    end
    
    figure(1)
    subplot(3,2,iParam*2)
%     yyaxis left
    
    for FilterNum=1:3
%       p=semilogx(x,y(FilterNum,:),'-','LineWidth',1,'Color','k');
%       p.Color(4) = 0.5;
    pright(iParam,FilterNum)=semilogx(x,FittedVal(FilterNum,:),LineLabels{FilterNum},'LineWidth',2,'Color','k');
        hold on
    end
    
    New_XTickLabel = get(gca,'xtick');
    set(gca,'XTickLabel',New_XTickLabel);
    a = get(gca,'Children');
    y1data = get(a, 'YData');
    y1min=min( [min(y1data{1}) min(y1data{2}) min(y1data{3}) ]);
    y1max=max( [max(y1data{1}) max(y1data{2}) max(y1data{3}) ]);
    scaledif=abs(y1max-y1min);
    ylim([y1min-scaledif*0.2 y1max+scaledif*0.2]);
%     ylim([y1min y1max]);

    ylabel(ylabels{iParam});
    ax = gca;
    ax.YColor = 'k';
    
%     figure(1)
%     yyaxis right
%     for FilterNum=1:3
%     %     semilogx(x,PercentChange(FilterNum,:),'-','LineWidth',2,'Color','k')
%         pleft(iParam,FilterNum)=semilogx(x,FittedPercent(FilterNum,:),LineLabels{FilterNum},'LineWidth',2,'Color','k');
%     end
%     
%     b = get(gca,'Children');
%     y2data = get(b, 'YData');
%     
%     y2min=min( [min(y2data{1}) min(y2data{2}) min(y2data{3}) ]);
%     y2max=max( [max(y2data{1}) max(y2data{2}) max(y2data{3}) ]);
%     scaledif=abs(y2max-y2min);
%     ylim([y2min-scaledif*0.2 y2max+scaledif*0.2]);
% %     ylim([y2min y2max]);
% 
%     title(ParamTitles{iParam});
%     ax = gca;
%     ax.YColor = 'k';
%     
%     if iParam==1
%         legend(FilterLabels,'AutoUpdate','off');
%     end
%     
    for FilterNum=1:3
        plot(x(BaseLine),FittedVal(FilterNum,BaseLine),'*','Color','k')
    end
    
%     xlim([x(1) x(97)]);
    
end

subplot(3,2,6)
% yyaxis right
% lbl=ylabel('Change from Nominal Value (% change)');
% lbl.Position(2) = 100; 
xlabel('Std. Dev. of k value')

% delete(pleft(3,3))
% delete(pleft(3,2))

%% Vary m-Wave delay

low=0.01;
high=.2;
NumPoints=100;
% wc=linspace(low,high,NumPoints);
wc=logspace(log10(low),log10(high),NumPoints);

% rng('shuffle');
% a=1000;
% b=100;
% rngseed=round(a+(b-a)*randn(1,100));
% mdlWks = get_param('NSFsim_syn','ModelWorkspace');

str1=sprintf('[%0.3f 1]',0.3);
set_param('NSFsim_syn/Paretic Hand/Stim Hand Angle/Transfer Fcn','Denominator',str1);
str1=sprintf('%0.2f',2);
set_param('NSFsim_syn/GainP','Gain',str1);

for iRep=1:1
    
    RepLabel=sprintf('Rep_%d',iRep);
%     assignin(mdlWks,'rngseed',rngseed(iRep));
    
    for FilterNum=1:3

        str1=sprintf('%d',FilterNum);
        FiltLabel=sprintf('Filt_%d',FilterNum);
        set_param('NSFsim_syn/Effort Estimator/FilterNum','Value',str1)

        if FilterNum==3
            wc=10*wc;
        end

        for iwc=1:length(wc)

        %     assignin(mdlWks,'rngseed',rngseed(iwc));
            str1=sprintf('%0.3f',wc(iwc));
            set_param('NSFsim_syn/Paretic Hand/mWave/GainVar','Gain',str1)
            sim('NSFsim_syn',SimTime);


            tstep=ans.SimulationMetadata.ModelInfo.SolverInfo.FixedStepSize*100;
            S.(RepLabel).TrackingError(FilterNum,iwc)=mean(abs(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),1)));
            S.(RepLabel).StdTe(FilterNum,iwc)=std(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),1)-Target);
            S.(RepLabel).EstEffort(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2));
            S.(RepLabel).TrueEffort(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));
            S.(RepLabel).NonPareticAngle(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),4));
            S.(RepLabel).PareticAngle(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),5));
            S.(RepLabel).StdEE(FilterNum,iwc)=std(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2)...
                -ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));

            S.(RepLabel).EffortCorr(FilterNum,iwc)=corr2(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2),...
                ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));

            S.(RepLabel).(FiltLabel).TrackingError(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),1);
            S.(RepLabel).(FiltLabel).EstEffort(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),2);
            S.(RepLabel).(FiltLabel).TrueEffort(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),3);


        end
    end
end
str1=sprintf('%0.3f',0.01);
set_param('NSFsim_syn/Paretic Hand/mWave/GainVar','Gain',str1)
save('syn_3filter2_mWaveDelNoReps2')

%%
Target=0.5;
clear O
O=struct;
O.TrackingError.data=TrackingError;
O.StdTe=StdTe;
O.EstEffort=EstEffort;
O.TrueEffort=TrueEffort;
O.NonPareticAngle=NonPareticAngle;
O.StdEE=StdEE;
O.EffortCorr.data=EffortCorr;
O.TrackingSNR.data=(StdTe/Target).^-1;
O.EstEffSNR.data=(EstEffort./StdEE);
meandelay=40;
O.wc=wc/meandelay/10;

BaseLine=1;
Target=0.5;
fit_n=4;

ParamLabels={'TrackingError','TrackingSNR','EstEffSNR','EffortCorr'};
ParamTitles={'TrackingError','TrackingSNR',...
    'Estimated Effort SNR','Correlation: True vs Estimated Effort'};
ylabels={'Tracking Error (a.u.)','Tracking SNR',...
    'Estimtad Effort SNR','Pearson Correlation'};
FilterLabels={'Comb','GS','Blanking'};
LineLabels={'-','--','-.'};

for iParam=1:3

    ParamLabel=ParamLabels{iParam};
    
%     if iParam==4
%         fit_n=0;
%     end
    
    for FilterNum=1:3
        y(FilterNum,:)=O.(ParamLabel).data(FilterNum,:);
        x=O.wc;
        PercentChange(FilterNum,:)=-100+100*abs(y(FilterNum,:))/abs(y(1,BaseLine));
        FittedVal(FilterNum,:)=nPolyFit(x,y(FilterNum,:),fit_n);
        FittedPercent(FilterNum,:)=nPolyFit(x,PercentChange(FilterNum,:),fit_n);
    end
    
    figure(1)
    subplot(3,2,iParam*2-1)
%     yyaxis left
    
    for FilterNum=1:3
%         p=semilogx(x,y(FilterNum,:),'-','LineWidth',1,'Color','k');
%         p.Color(4) = 0.5;
       pright(iParam,FilterNum)=semilogx(x,FittedVal(FilterNum,:),LineLabels{FilterNum},'LineWidth',2,'Color','k');
        hold on
    end
    
    New_XTickLabel = get(gca,'xtick');
    set(gca,'XTickLabel',New_XTickLabel);
    a = get(gca,'Children');
    y1data = get(a, 'YData');
    y1min=min( [min(y1data{1}) min(y1data{2}) min(y1data{3}) ]);
    y1max=max( [max(y1data{1}) max(y1data{2}) max(y1data{3}) ]);
    scaledif=abs(y1max-y1min);
    ylim([y1min-scaledif*0.2 y1max+scaledif*0.2]);
    ylabel(ylabels{iParam});
    ax = gca;
    ax.YColor = 'k';
    
%     figure(1)
%     yyaxis right

%     for FilterNum=1:3
%     %     semilogx(x,PercentChange(FilterNum,:),'-','LineWidth',2,'Color','k')
%         pleft(iParam,FilterNum)=semilogx(x,FittedPercent(FilterNum,:),LineLabels{FilterNum},'LineWidth',2,'Color','k');
%     end
%     
%     b = get(gca,'Children');
%     y2data = get(b, 'YData');
% 
%     y2min=min( [min(y2data{1}) min(y2data{2}) min(y2data{3}) ]);
%     y2max=max( [max(y2data{1}) max(y2data{2}) max(y2data{3}) ]);
%     scaledif=abs(y2max-y2min);
%     ylim([y2min-scaledif*0.2 y2max+scaledif*0.2]);
%     title(ParamTitles{iParam});
%     ax = gca;
%     ax.YColor = 'k';
%     

    for FilterNum=1:3
        plot(x(BaseLine),FittedVal(FilterNum,BaseLine),'*','Color','k')
    end
    
    if iParam==1
        legend(FilterLabels,'AutoUpdate','off','Location','NorthWest');
    end
    
end

subplot(3,2,5)
% yyaxis right
% lbl=ylabel('Change from Nominal Value (% change)');
% lbl.Position(2) = 100; 
xlabel('Std. Dev. of m-Wave Delay (s)')

%delete(pleft(4,3))
%delete(pleft(4,1))

%% Stim Freq.
NSFsim_syn
low=10;
high=30;
NumPoints=100;
stimfreqs=logspace(log10(low),log10(high),NumPoints);
tstep=0.0001;
wcc=1/tstep./stimfreqs;
a=round(wcc)*tstep;
% wc=1./a;
wc=round(stimfreqs,4);

% rng('shuffle');
% a=1000;
% b=100;
% rngseed=round(a+(b-a)*randn(1,100));

str1=sprintf('[%0.3f 1]',0.3);
set_param('NSFsim_syn/Paretic Hand/Stim Hand Angle/Transfer Fcn','Denominator',str1)
str1=sprintf('%0.2f',2);
set_param('NSFsim_syn/GainP','Gain',str1)
% str1=sprintf('%0.10f',GainE_val_min(4));
% set_param('NSFsim_syn/GainE','Gain',str1)
str1=sprintf('%0.2f',20);
set_param('NSFsim_syn/Paretic Hand/Occlusion/Noise','Value',str1)
mdlWks = get_param('NSFsim_syn','ModelWorkspace');
assignin(mdlWks,'rngseed',1000);

for iRep=1:1
    
    RepLabel=sprintf('Rep_%d',iRep);
%     assignin(mdlWks,'rngseed',rngseed(iRep));
    
    for FilterNum=1:3

        str1=sprintf('%d',FilterNum);
        FiltLabel=sprintf('Filt_%d',FilterNum);
        set_param('NSFsim_syn/Effort Estimator/FilterNum','Value',str1)

        for iwc=1:length(wc)

        %     assignin(mdlWks,'rngseed',rngseed(iwc))
            assignin(mdlWks,'stimfreq',wc(iwc));

            sim('NSFsim_syn',SimTime);
    
            tstep=ans.SimulationMetadata.ModelInfo.SolverInfo.FixedStepSize*100;
            S.(RepLabel).TrackingError(FilterNum,iwc)=mean(abs(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),1)));
            S.(RepLabel).StdTe(FilterNum,iwc)=std(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),1)-Target);
            S.(RepLabel).EstEffort(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2));
            S.(RepLabel).TrueEffort(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));
            S.(RepLabel).NonPareticAngle(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),4));
            S.(RepLabel).PareticAngle(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),5));
            S.(RepLabel).StdEE(FilterNum,iwc)=std(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2)...
                -ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));

            S.(RepLabel).EffortCorr(FilterNum,iwc)=corr2(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2),...
                ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));

            S.(RepLabel).(FiltLabel).TrackingError(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),1);
            S.(RepLabel).(FiltLabel).EstEffort(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),2);
            S.(RepLabel).(FiltLabel).TrueEffort(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),3);

    
        end

    end
end

assignin(mdlWks,'stimfreq',20)
save('syn_3filter2_StimFreqNoReps2')

%%

Target=0.5;
clear O
O=struct;
O.TrackingError.data=TrackingError;
O.StdTe=StdTe;
O.EstEffort=EstEffort;
O.TrueEffort=TrueEffort;
O.NonPareticAngle=NonPareticAngle;
O.StdEE=StdEE;
O.EffortCorr.data=EffortCorr;
O.TrackingSNR.data=(StdTe/Target).^-1;
O.EstEffSNR.data=(EstEffort./StdEE);
O.wc=wc;

BaseLine=44;
Target=0.5;
fit_n=5;
ParamNumber=3;
ParamLabels={'TrackingError','TrackingSNR','EstEffSNR','EffortCorr'};
ParamTitles={'TrackingError','TrackingSNR',...
    'Estimated Effort SNR','Correlation: True vs Estimated Effort'};
xlabels={'Volitional Paretic Hand Opening Constant' };
ylabels={'Tracking Error (a.u.)','Tracking SNR',...
    'Estimtad Effort SNR','Pearson Correlation'};
FilterLabels={'Comb','GS','Blanking'};
LineLabels={'-','--','-.'};

for iParam=1:ParamNumber

    ParamLabel=ParamLabels{iParam};
    
    if iParam==4
        fit_n=0;
    end
    
    for FilterNum=1:3
        y(FilterNum,:)=O.(ParamLabel).data(FilterNum,:);
        x=O.wc;
        PercentChange(FilterNum,:)=-100+100*abs(y(FilterNum,:))/abs(y(1,BaseLine));
        FittedVal(FilterNum,:)=nPolyFit(x,y(FilterNum,:),fit_n);
        FittedPercent(FilterNum,:)=nPolyFit(x,PercentChange(FilterNum,:),fit_n);
    end
    
    figure(1)
    subplot(ParamNumber,2,iParam*2-1)
%     yyaxis left
    for FilterNum=1:3
%       p=semilogx(x,y(FilterNum,:),LineLabels{FilterNum},'LineWidth',2,'Color','k');
%       p.Color(4) = 0.5;
        pright(iParam,FilterNum)=semilogx(x,FittedVal(FilterNum,:),LineLabels{FilterNum},'LineWidth',2,'Color','k');
        hold on
    end
    
    a = get(gca,'Children');
    y1data = get(a, 'YData');
    y1min=min( [min(y1data{1}) min(y1data{2}) min(y1data{3}) ]);
    y1max=max( [max(y1data{1}) max(y1data{2}) max(y1data{3}) ]);
    scaledif=abs(y1max-y1min);
    ylim([y1min-scaledif*0.2 y1max+scaledif*0.2]);
    ylabel(ylabels{iParam});
    ax = gca;
    ax.YColor = 'k';
%     
%     figure(1)
%     yyaxis right
%     nmin=1;
%     nmax=3;
% 
%     for FilterNum=nmin:nmax
%     %     semilogx(x,PercentChange(FilterNum,:),'-','LineWidth',2,'Color','k')
%         pleft(iParam,FilterNum)=semilogx(x,FittedPercent(FilterNum,:),LineLabels{FilterNum},'LineWidth',2,'Color','k');
%     end
%     
%     b = get(gca,'Children');
%     y2data = get(b, 'YData');
% 
%     y2min=min( [min(y2data{1}) min(y2data{2}) min(y2data{3}) ]);
%     y2max=max( [max(y2data{1}) max(y2data{2}) max(y2data{3}) ]);
%     scaledif=abs(y2max-y2min);
%     ylim([y2min-scaledif*0.2 y2max+scaledif*0.2]);
%     title(ParamTitles{iParam});
%     ax = gca;
%     ax.YColor = 'k';

    for FilterNum=1:3
        plot(x(BaseLine),FittedVal(FilterNum,BaseLine),'*','Color','k')
    end
%     
    if iParam==1
        legend(FilterLabels,'AutoUpdate','off');
    end
    
end
subplot(ParamNumber,2,5)
% yyaxis right
% lbl=ylabel('Change from Nominal Value (% change)');
% lbl.Position(2) = 50; 
xlabel('Stimulation Frequency (Hz)')

%% Est. Effort SNR

low=1;
high=20;
NumPoints=100;
EffSNR=logspace(log10(low),log10(high),NumPoints);
wc=round(EffSNR.^-1,4);

% rng('shuffle');
% a=1000;
% b=100;
% rngseed=round(a+(b-a)*randn(1,100));

str1=sprintf('[%0.3f 1]',0.3);
set_param('NSFsim_syn/Paretic Hand/Stim Hand Angle/Transfer Fcn','Denominator',str1)
str1=sprintf('%0.2f',2);
set_param('NSFsim_syn/GainP','Gain',str1)
% str1=sprintf('%0.10f',GainE_val_min(4));
% set_param('NSFsim_syn/GainE','Gain',str1)
str1=sprintf('%0.2f',20);
set_param('NSFsim_syn/Paretic Hand/Occlusion/Noise','Value',str1)
mdlWks = get_param('NSFsim_syn','ModelWorkspace');
assignin(mdlWks,'rngseed',1000);


FilterNum=4;
str1=sprintf('%d',FilterNum);
set_param('NSFsim_syn/Effort Estimator/FilterNum','Value',str1)

for iwc=1:length(wc)

%     assignin(mdlWks,'rngseed',rngseed(iwc))
%     assignin(mdlWks,'stimfreq',wc(iwc));

    str1=sprintf('%0.3f',wc(iwc));
    set_param('NSFsim_syn/Effort Estimator/EffSNR/Gain','Gain',str1)
    
    sim('NSFsim_syn',SimTime);
    
    tstep=ans.SimulationMetadata.ModelInfo.SolverInfo.FixedStepSize*100;
    TrackingError(iwc)=mean(abs(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),1)));
    StdTe(iwc)=std(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),1)-Target);
    EstEffort(iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2));
    TrueEffort(iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));
    NonPareticAngle(iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),4));
    PareticAngle(iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),5));
    StdEE(iwc)=std(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2)...
        -ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));
    
    EffortCorr(iwc)=corr2(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2),...
        ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));
    
end

FilterNum=1;
str1=sprintf('%d',FilterNum);
set_param('NSFsim_syn/Effort Estimator/FilterNum','Value',str1)

%%

Target=0.5;
clear O
O=struct;
O.TrackingError.data=TrackingError;
O.StdTe=StdTe;
O.EstEffort=EstEffort;
O.TrueEffort=TrueEffort;
O.NonPareticAngle=NonPareticAngle;
O.StdEE=StdEE;
O.EffortCorr.data=EffortCorr;
O.TrackingSNR.data=(StdTe/Target).^-1;
O.EstEffSNR.data=(EstEffort./StdEE);
O.wc=EffSNR;

BaseLine=50;
Target=0.5;
fit_n=3;
ParamNumber=2;
ParamLabels={'TrackingError','TrackingSNR','EstEffSNR','EffortCorr'};
ParamTitles={'TrackingError','TrackingSNR',...
    'Estimated Effort SNR','Correlation: True vs Estimated Effort'};
xlabels={'Volitional Paretic Hand Opening Constant' };
ylabels={'Tracking Error (a.u.)','Tracking SNR',...
    'Estimtad Effort SNR','Pearson Correlation'};
FilterLabels={'Comb','GS','Blanking'};
LineLabels={'-','--','-.'};


% % debuging
% for iParam=3:3
% 
%     ParamLabel=ParamLabels{iParam};
%     nmin=1;
%     nmax=1;
% 
%     for FilterNum=nmin:nmax
%         
%         y(FilterNum,:)=O.(ParamLabel).data(FilterNum,:);
%         x=1./(O.wc);
%         f1 = fit(x',y','exp2');
%         a=coeffvalues(f1);
%         FittedVal=a(1)*exp(a(2)*x)+a(3)*exp(a(4)*x);
%         plot(x,FittedVal)
%         hold
%         plot(x,y)
% 
%     end
%  
% end
    %
for iParam=1:ParamNumber

    ParamLabel=ParamLabels{iParam};
    
    if iParam==4
        fit_n=3;
    end
    
    nmin=1;
    nmax=1;
    
    for FilterNum=nmin:nmax
        y(FilterNum,:)=O.(ParamLabel).data(FilterNum,:);
        x=O.wc;
        f1 = fit(x',y','exp2');
        a=coeffvalues(f1);
        FittedVal(FilterNum,:)=a(1)*exp(a(2)*x)+a(3)*exp(a(4)*x);
        
%         PercentChange(FilterNum,:)=-100+100*abs(y(FilterNum,:))/abs(y(1,BaseLine));
%         FittedVal(FilterNum,:)=nPolyFit(x,y(FilterNum,:),fit_n);
%         FittedPercent(FilterNum,:)=nPolyFit(x,PercentChange(FilterNum,:),fit_n);
    end
    
    figure(1)
    subplot(ParamNumber,2,iParam*2)
%     yyaxis left
    for FilterNum=nmin:nmax
%       p=plot(x,y(FilterNum,:),'-','LineWidth',2,'Color','k');
%       p.Color(4) = 0.5;
        pright(iParam,FilterNum)=semilogx(x,FittedVal(FilterNum,:),LineLabels{FilterNum},'LineWidth',2,'Color','k');
        hold on
        grid
    end
    
    New_XTickLabel = get(gca,'xtick');
    set(gca,'XTickLabel',New_XTickLabel);
    
    a = get(gca,'Children');
    y1data = get(a, 'YData');
    y1min=min(y1data);
    y1max=max(y1data);
    scaledif=abs(y1max-y1min);
    ylim([y1min-scaledif*0.2 y1max+scaledif*0.2]);
    ylabel(ylabels{iParam});
    ax = gca;
    ax.YColor = 'k';
    
%     figure(1)
%     yyaxis right
%     
%     for FilterNum=nmin:nmax
%     %     semilogx(x,PercentChange(FilterNum,:),'-','LineWidth',2,'Color','k')
%         pleft(iParam,FilterNum)=semilogx(x,FittedPercent(FilterNum,:),LineLabels{FilterNum},'LineWidth',2,'Color','k');
%     end
%     
%     b = get(gca,'Children');
%     y2data = get(b, 'YData');
% 
%     y2min=min(y2data);
%     y2max=max(y2data);
%     scaledif=abs(y2max-y2min);
%     ylim([y2min-scaledif*0.2 y2max+scaledif*0.2]);
%     title(ParamTitles{iParam});
%     ax = gca;
%     ax.YColor = 'k';
%     
    if iParam==1
        legend('Artificial Estimation','AutoUpdate','off');
    end
    
end

subplot(ParamNumber,2,4)
% yyaxis right
% lbl=ylabel('Change from Nominal Value (% change)');
% lbl.Position(2) = 50; 
xlabel('Artificial Effort SNR')
%%





%% pary hand && and stim hand
   
RepNum=10;
NumPoints=10;
low=1;
high=4;
Par1Vals=logspace(log10(low),log10(high),NumPoints);

str1=sprintf('[%0.3f 1]',0.3);
set_param('NSFsim_syn/Paretic Hand/Stim Hand Angle/Transfer Fcn','Denominator',str1)
str1=sprintf('%0.2f',10);
set_param('NSFsim_syn/GainNP','Gain',str1)
str1=sprintf('%0.2f',20);
set_param('NSFsim_syn/Paretic Hand/Occlusion/Noise','Value',str1)
 
low=0.3/2;
high=0.3*2;
Par2Vals=logspace(log10(low),log10(high),NumPoints);

% rng('shuffle');
% a=1000;
% b=100;
% rngseed=round(a+(b-a)*randn(1,100));
% mdlWks = get_param('NSFsim_syn','ModelWorkspace');

str1=sprintf('[%0.3f 1]',0.3);
set_param('NSFsim_syn/Paretic Hand/Stim Hand Angle/Transfer Fcn','Denominator',str1)
% str1=sprintf('%0.2f',10);
% set_param('NSFsim_syn/GainNP','Gain',str1)
str1=sprintf('%0.2f',2);
set_param('NSFsim_syn/GainP','Gain',str1)
% str1=sprintf('%0.10f',GainE_val_min(BaseLine));
% set_param('NSFsim_syn/GainE','Gain',str1)
str1=sprintf('%0.2f',20);
set_param('NSFsim_syn/Paretic Hand/Occlusion/Noise','Value',str1)

for iRep=1:RepNum
    
    RepLabel=sprintf('Rep_%d',iRep);
%     assignin(mdlWks,'rngseed',rngseed(iRep));
    
    for FilterNum=1:3

    strfilt=sprintf('%d',FilterNum);
    FiltLabel=sprintf('Filt_%d',FilterNum);

    set_param('NSFsim_syn/Effort Estimator/FilterNum','Value',strfilt)

        for iPar1=1:length(Par1Vals)
            
            for iPar2=1:length(Par2Vals)

                str1=sprintf('%0.2f',Par1Vals(iPar1));
                set_param('NSFsim_syn/GainP','Gain',str1)
                
                str2=sprintf('[%0.3f 1]',Par2Vals(iPar2));
                set_param('NSFsim_syn/Paretic Hand/Stim Hand Angle/Transfer Fcn','Denominator',str2)

                sim('NSFsim_syn',SimTime);

                tstep=ans.SimulationMetadata.ModelInfo.SolverInfo.FixedStepSize*100;
                S.(RepLabel).(FiltLabel).TrackingError(iPar1,iPar2)=mean(abs(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),1)));
                S.(RepLabel).(FiltLabel).StdTe(iPar1,iPar2)=std(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),1)-Target);
                S.(RepLabel).(FiltLabel).EstEffort(iPar1,iPar2)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2));
                S.(RepLabel).(FiltLabel).TrueEffort(iPar1,iPar2)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));
                S.(RepLabel).(FiltLabel).NonPareticAngle(iPar1,iPar2)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),4));
                S.(RepLabel).(FiltLabel).PareticAngle(iPar1,iPar2)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),5));
                S.(RepLabel).(FiltLabel).StdEE(iPar1,iPar2)=std(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2)...
                    -ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));
                S.(RepLabel).(FiltLabel).EffortCorr(iPar1,iPar2)=corr2(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2),...
                    ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));

%                 S.(RepLabel).(FiltLabel).TrackingError(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),1);
%                 S.(RepLabel).(FiltLabel).EstEffort(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),2);
%                 S.(RepLabel).(FiltLabel).TrueEffort(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),3);
            end

        end

    end
end

str1=sprintf('%0.2f',2);
set_param('NSFsim_syn/GainP','Gain',str1)

save('syn_3filter2_ParyandStim')

%% Hyp filter 

low=0;
high=1;
% wc=linspace(low,high,NumPoints);
wc=logspace(log10(low),log10(high),NumPoints);

% rng('shuffle');
% a=1000;
% b=100;
% rngseed=round(a+(b-a)*randn(1,100));
% mdlWks = get_param('NSFsim_syn','ModelWorkspace');

str1=sprintf('%0.2f',0);
set_param('NSFsim_syn/Effort Estimator/Comb/Gain','Gain',str1)
% str1=sprintf('%0.2f',0);
% set_param('NSFsim_syn/Paretic Hand/mWave/GainVar','Gain',str1)
str1=sprintf('%0.2f',2);
set_param('NSFsim_syn/GainP','Gain',str1)
% str1=sprintf('%0.10f',GainE_val_min(BaseLine));
% set_param('NSFsim_syn/GainE','Gain',str1)
for iRep=1:1
    
    RepLabel=sprintf('Rep_%d',iRep);
    assignin(mdlWks,'rngseed',rngseed(iRep));
    
    for FilterNum=5:5

        str1=sprintf('%d',FilterNum);
        FiltLabel=sprintf('Filt_%d',FilterNum);
        set_param('NSFsim_syn/Effort Estimator/FilterNum','Value',str1)

        for iwc=1:length(wc)

        %     assignin(mdlWks,'rngseed',rngseed(iwc));
            str1=sprintf('%0.2f',wc(iwc));
            set_param('NSFsim_syn/Paretic Hand/Occlusion/Noise','Value',str1)
            sim('NSFsim_syn',SimTime);


            tstep=ans.SimulationMetadata.ModelInfo.SolverInfo.FixedStepSize*100;
            S.(RepLabel).TrackingError(FilterNum,iwc)=mean(abs(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),1)));
            S.(RepLabel).StdTe(FilterNum,iwc)=std(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),1)-Target);
            S.(RepLabel).EstEffort(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2));
            S.(RepLabel).TrueEffort(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));
            S.(RepLabel).NonPareticAngle(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),4));
            S.(RepLabel).PareticAngle(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),5));
            S.(RepLabel).StdEE(FilterNum,iwc)=std(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2)...
                -ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));

            S.(RepLabel).EffortCorr(FilterNum,iwc)=corr2(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2),...
                ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));

            S.(RepLabel).(FiltLabel).TrackingError(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),1);
            S.(RepLabel).(FiltLabel).EstEffort(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),2);
            S.(RepLabel).(FiltLabel).TrueEffort(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),3);


        end

    end
end

str1=sprintf('%0.2f',20);
set_param('NSFsim_syn/Paretic Hand/Occlusion/Noise','Value',str1)
save('mmmm')



%% 1. Preliminaries
clear lgTau TrackingError EstEffort TrueEffort NonPareticAngle PareticAngle StdTe StdEE EffortCorr
SimTime=10;
TimeRange=[2 SimTime];
TimeRange2=[1 SimTime];
NumPoints=100;
Target=0.5;
TrackingError=zeros(1,NumPoints);
EstEffort=zeros(1,NumPoints);
TrueEffort=zeros(1,NumPoints);
NonPareticAngle=zeros(1,NumPoints);
PareticAngle=zeros(1,NumPoints);
StdTe=zeros(1,NumPoints);
StdEE=zeros(1,NumPoints);
EffortCorr=zeros(1,NumPoints);

mdlWks = get_param('NSFsim_syn_2023','ModelWorkspace');
assignin(mdlWks,'rngseed',1000);

RepNum=10;
rng('default');
a=1000;
b=100;
rngseed=round(a+(b-a)*randn(1,10));
mdlWks = get_param('NSFsim_syn_2023','ModelWorkspace');
%% Vary Target Line

low=0.5;
high=1.2;
NumPoints=100;
% wc=linspace(low,high,NumPoints);
wc=logspace(log10(low),log10(high),NumPoints);
FilterOrder=[2 1 3 4];
% rng('shuffle');
% a=1000;
% b=100;
% rngseed=round(a+(b-a)*randn(1,100));
% mdlWks = get_param('NSFsim_syn','ModelWorkspace');

str1=sprintf('[%0.3f 1]',0.3);
set_param('NSFsim_syn_2023/Paretic Hand/Stim Hand Angle/Transfer Fcn','Denominator',str1);
str1=sprintf('%0.2f',2);
set_param('NSFsim_syn_2023/GainP','Gain',str1);

for iRep=1:1
    
    RepLabel=sprintf('Rep_%d',iRep);
%     assignin(mdlWks,'rngseed',rngseed(iRep));
    
    for FilterNum=1:1

        str1=sprintf('%d',FilterOrder(FilterNum));
        FiltLabel=sprintf('Filt_%d',FilterNum);
        set_param('NSFsim_syn_2023/Effort Estimator/FilterNum','Value',str1)

        for iwc=1:length(wc)

        %     assignin(mdlWks,'rngseed',rngseed(iwc));
            str1=sprintf('%0.3f',wc(iwc));
            set_param('NSFsim_syn_2023/DC','Value',str1)
            sim('NSFsim_syn_2023',SimTime);

            tstep=ans.SimulationMetadata.ModelInfo.SolverInfo.FixedStepSize*100;
            S.(RepLabel).TrackingError(FilterNum,iwc)=mean(abs(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),1)));
            S.(RepLabel).StdTe(FilterNum,iwc)=std(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),1)-Target);
            S.(RepLabel).EstEffort(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2));
            S.(RepLabel).TrueEffort(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));
            S.(RepLabel).NonPareticAngle(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),4));
            S.(RepLabel).PareticAngle(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),5));
            S.(RepLabel).StdEE(FilterNum,iwc)=std(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2)...
                -ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));

            S.(RepLabel).EffortCorr(FilterNum,iwc)=corr2(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2),...
                ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));

            S.(RepLabel).(FiltLabel).TrackingError(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),1);
            S.(RepLabel).(FiltLabel).EstEffort(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),2);
            S.(RepLabel).(FiltLabel).TrueEffort(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),3);

        end
    end
end



%% Occlusion Rate
low=0.5;
high=1.2;
NumPoints=100;
% wc=linspace(low,high,NumPoints);
wc=logspace(log10(low),log10(high),NumPoints);
FilterOrder=[2 1 3 4];
% rng('shuffle');
% a=1000;
% b=100;
% rngseed=round(a+(b-a)*randn(1,100));
% mdlWks = get_param('NSFsim_syn','ModelWorkspace');

str1=sprintf('[%0.3f 1]',0.3);
set_param('NSFsim_syn_2023/Paretic Hand/Stim Hand Angle/Transfer Fcn','Denominator',str1);
str1=sprintf('%0.2f',2);
set_param('NSFsim_syn_2023/GainP','Gain',str1);

for iRep=1:1
    
    RepLabel=sprintf('Rep_%d',iRep);
%     assignin(mdlWks,'rngseed',rngseed(iRep));
    
    for FilterNum=1:1

        str1=sprintf('%d',FilterOrder(FilterNum));
        FiltLabel=sprintf('Filt_%d',FilterNum);
        set_param('NSFsim_syn_2023/Effort Estimator/FilterNum','Value',str1)

        for iwc=1:length(wc)

        %     assignin(mdlWks,'rngseed',rngseed(iwc));
            str1=sprintf('%0.3f',wc(iwc));
            set_param('NSFsim_syn_2023/DC','Value',str1)
            sim('NSFsim_syn_2023',SimTime);

            tstep=ans.SimulationMetadata.ModelInfo.SolverInfo.FixedStepSize*100;
            S.(RepLabel).TrackingError(FilterNum,iwc)=mean(abs(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),1)));
            S.(RepLabel).StdTe(FilterNum,iwc)=std(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),1)-Target);
            S.(RepLabel).EstEffort(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2));
            S.(RepLabel).TrueEffort(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));
            S.(RepLabel).NonPareticAngle(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),4));
            S.(RepLabel).PareticAngle(FilterNum,iwc)=mean(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),5));
            S.(RepLabel).StdEE(FilterNum,iwc)=std(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2)...
                -ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));

            S.(RepLabel).EffortCorr(FilterNum,iwc)=corr2(ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),2),...
                ans.Outcome((TimeRange(1)/tstep:TimeRange(2)/tstep),3));

            S.(RepLabel).(FiltLabel).TrackingError(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),1);
            S.(RepLabel).(FiltLabel).EstEffort(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),2);
            S.(RepLabel).(FiltLabel).TrueEffort(iwc,:)=ans.Outcome((TimeRange2(1)/tstep:TimeRange2(2)/tstep),3);

        end
    end
end


 %%
% str1=sprintf('%0.3f',0.01);
% set_param('NSFsim_syn/Paretic Hand/mWave/GainVar','Gain',str1)
save('syn_3filter3_target')


%%

FilterNum=1;
RepLabel=sprintf('Rep_%d',iRep);

TrackingError=S.(RepLabel).TrackingError(FilterNum,:);
EstEffort=S.(RepLabel).EstEffort(FilterNum,:);
StdTe=S.(RepLabel).StdTe(FilterNum,:);
StdEE=S.(RepLabel).StdEE(FilterNum,:);
figure(1)

subplot(1,3,1)

semilogx(wc,TrackingError,'LineWidth',2,'Color','k');
xlabel('Tracking Target')
ylabel('Tracking Error')

subplot(1,3,2)
semilogx(wc,EstEffort,'LineWidth',2,'Color','k');
xlabel('Tracking Target')
ylabel('Effort Estimation Error')

subplot(1,3,3)

semilogx(wc,EstEffort./StdTe,'LineWidth',2,'Color','k');
xlabel('Tracking Target')
ylabel('Effort Estimation SNR')
